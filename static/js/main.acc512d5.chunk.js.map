{"version":3,"sources":["faceApi.js","Custom Hook/useIsMount.js","Components/Loading.js","Components/App.js","Components/Layout.js","Components/NavBar.js","index.js","Components/About.js","Components/Contact.js","Components/Page404.js"],"names":["loadModels","a","MODEL_URL","process","faceapi","console","log","message","getFullFaceDescription","blob","inputSize","scoreThreshold","OPTION","useTinyModel","src","img","withFaceLandmarks","withFaceDescriptors","fullDesc","Loading","size","App","useState","image","setImage","detectedFaces","setDetectedFaces","isLoading","setIsLoading","isMount","isMountRef","useRef","useEffect","current","useIsMount","handleImage","checkIsMount","input","document","getElementById","then","className","for","style","display","type","id","accept","multiple","onClick","onChange","event","URL","createObjectURL","target","files","alt","map","detectedFace","width","detection","_box","height","x","y","crop","Layout","props","Container","children","Styles","styled","div","NavBar","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Item","to","ReactDOM","render","Fragment","exact","path","component"],"mappings":"uPAMO,SAAeA,IAAtB,+B,4CAAO,4BAAAC,EAAA,6DACGC,EAAYC,mBADf,kBAIOC,IAAkCF,GAJzC,uBAKOE,IAAkCF,GALzC,uBAMOE,IAAiCF,GANxC,yDAQCG,QAAQC,IAAI,KAAMC,SARnB,2D,sBAgBA,SAAeC,EAAtB,kC,4CAAO,WAAsCC,GAAtC,qCAAAR,EAAA,6DAA4CS,EAA5C,+BAAwD,IACvDC,EAAiB,GACfC,EAAS,IAAIR,IAAgC,CAC/CM,YACAC,mBAEEE,GAAe,EANlB,kBAQiBT,IAAmBK,EAAKK,KARzC,cAQKC,EARL,iBASsBX,IACDW,EAAKH,GACpBI,kBAAkBH,GAClBI,sBAZN,eASKC,EATL,yBAaQA,GAbR,kCAeCb,QAAQC,IAAI,UAAW,KAAMC,SAf9B,2D,sBCjBA,I,QCAQY,EADC,kBAAM,kBAAC,sBAAD,CAAqBC,KAAK,aCyFjCC,G,OAtFH,WAAO,IAAD,EACYC,mBAAS,MADrB,mBACPC,EADO,KACAC,EADA,OAE4BF,mBAAS,IAFrC,mBAEPG,EAFO,KAEQC,EAFR,OAGoBJ,oBAAS,GAH7B,mBAGPK,EAHO,KAGIC,EAHJ,KAKRC,EFPgB,WACtB,IAAMC,EAAaC,kBAAO,GAI1B,OAHAC,qBAAU,WACNF,EAAWG,SAAU,IACtB,IACIH,EAAWG,QEEFC,GAChBF,qBAAU,YACY,uCAAG,sBAAA/B,EAAA,0DACb4B,EADa,uBAEbD,GAAa,GAFA,SAGP5B,IAHO,OAIb4B,GAAa,GAJA,2BAMTL,EANS,wBAOTK,GAAa,GAPJ,UAQHO,IARG,QASTP,GAAa,GATJ,4CAAH,qDAalBQ,KACD,CAACb,IAEJ,IAAMY,EAAW,uCAAG,4BAAAlC,EAAA,6DACVoC,EAAQC,SAASC,eAAe,aADtB,SAEV/B,EAAuB6B,GAAOG,MAAK,SAACtB,GACtCQ,EAAiBR,MAHL,2CAAH,qDAOjB,OACI,yBAAKuB,UAAU,iBACVd,EACG,kBAAC,EAAD,MAEA,6BACI,6BACI,2BAAOe,IAAI,YAAYD,UAAU,mBAAjC,mBAGA,2BACIE,MAAO,CAAEC,QAAS,QAClBC,KAAK,OACLC,GAAG,YACHC,OAAO,UACPC,UAAU,EACVC,QAAS,WACLzB,EAAS,MACTE,EAAiB,KAErBwB,SAAU,SAACC,GACP3B,EACI4B,IAAIC,gBAAgBF,EAAMG,OAAOC,MAAM,SAKvD,yBACIT,GAAG,YACHhC,IAAKS,GAAgB,IACrBiC,IAAKjC,EAAQ,OAAS,GACtBkB,UAAU,gBAEblB,EACG,yBAAKkB,UAAU,gBACVhB,EAAcgC,KAAI,SAACC,GAChB,IAAIC,EAAQD,EAAaE,UAAUC,KAAKF,MACpCG,EAASJ,EAAaE,UAAUC,KAAKC,OACrCC,EAAIL,EAAaE,UAAUC,KAAKE,EAChCC,EAAIN,EAAaE,UAAUC,KAAKG,EAEpC,OACI,kBAAC,IAAD,CACIzC,MAAOA,EACP0C,KAAM,CAAEN,QAAOG,SAAQC,IAAGC,WAK1C,S,iBCnFXE,EAAS,SAACC,GAAD,OAAW,kBAACC,EAAA,EAAD,KAAYD,EAAME,W,iUCEnD,IAAMC,E,MAASC,EAAOC,IAAV,KAgBCC,EAAS,WAClB,OACI,kBAACH,EAAD,KACI,kBAACI,EAAA,EAAD,CAAQC,OAAO,MACX,kBAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,KAAnB,YACA,kBAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,kBAACL,EAAA,EAAOM,SAAR,KACI,kBAACC,EAAA,EAAD,CAAKxC,UAAU,WACX,kBAACwC,EAAA,EAAIC,KAAL,KACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAGJ,kBAACF,EAAA,EAAIC,KAAL,KACI,kBAAC,IAAD,CAAMC,GAAG,UAAT,UAGJ,kBAACF,EAAA,EAAIC,KAAL,KACI,kBAAC,IAAD,CAAMC,GAAG,YAAT,iBC3B5BC,IAASC,OACL,kBAAC,IAAMC,SAAP,KACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpE,IACjC,kBAAC,IAAD,CAAOmE,KAAK,SAASC,UChBpB,WACjB,OACI,6BACI,yCDcQ,kBAAC,IAAD,CAAOD,KAAK,WAAWC,UEjBpB,WACnB,OACI,6BACI,2CFeQ,kBAAC,IAAD,CAAOA,UGlBJ,WACnB,OACI,6BACI,+CHoBRnD,SAASC,eAAe,U","file":"static/js/main.acc512d5.chunk.js","sourcesContent":["// credits: https://towardsdatascience.com/facial-recognition-spa-for-bnk48-idol-group-using-react-and-face-api-js-ad62b43ec5b6\nimport * as faceapi from \"face-api.js\";\n\n/**\n * This function loads models from local folder\n */\nexport async function loadModels() {\n    const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\n\n    try {\n        await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\n        await faceapi.loadFaceLandmarkTinyModel(MODEL_URL);\n        await faceapi.loadFaceRecognitionModel(MODEL_URL);\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n\n/**\n * This function detects a face within given image\n * @return {Object} Consists of all information about detected image.\n */\nexport async function getFullFaceDescription(blob, inputSize = 512) {\n    let scoreThreshold = 0.5;\n    const OPTION = new faceapi.TinyFaceDetectorOptions({\n        inputSize,\n        scoreThreshold,\n    });\n    const useTinyModel = true;\n    try {\n        let img = await faceapi.fetchImage(blob.src);\n        let fullDesc = await faceapi\n            .detectAllFaces(img, OPTION)\n            .withFaceLandmarks(useTinyModel)\n            .withFaceDescriptors();\n        return fullDesc;\n    } catch (error) {\n        console.log(\"error: \", error.message);\n    }\n}\n","import { useRef, useEffect } from \"react\";\n\n/**\n * A custom hook that checks if component renders component or not.\n */\nexport const useIsMount = () => {\n    const isMountRef = useRef(true);\n    useEffect(() => {\n        isMountRef.current = false;\n    }, []);\n    return isMountRef.current;\n};\n","import React from \"react\";\nimport { RotateCircleLoading } from \"react-loadingg\";\n\n// https://reactjsexample.com/build-a-smooth-and-lightweight-react-component-loading-with-css/\nconst Loading = () => <RotateCircleLoading size=\"default\" />;\nexport default Loading;\n","import React, { useState, useEffect } from \"react\";\nimport ProcessImage from \"react-imgpro\";\nimport { loadModels, getFullFaceDescription } from \"../faceApi\";\nimport { useIsMount } from \"../Custom Hook/useIsMount\";\nimport Loading from \"./Loading\";\nimport \"./App.css\";\n\nconst App = () => {\n    const [image, setImage] = useState(null);\n    const [detectedFaces, setDetectedFaces] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const isMount = useIsMount();\n    useEffect(() => {\n        const checkIsMount = async () => {\n            if (isMount) {\n                setIsLoading(true);\n                await loadModels();\n                setIsLoading(false);\n            } else {\n                if (image) {\n                    setIsLoading(true);\n                    await handleImage();\n                    setIsLoading(false);\n                }\n            }\n        };\n        checkIsMount();\n    }, [image]);\n\n    const handleImage = async () => {\n        const input = document.getElementById(\"input-img\");\n        await getFullFaceDescription(input).then((fullDesc) => {\n            setDetectedFaces(fullDesc);\n        });\n    };\n\n    return (\n        <div className=\"app-container\">\n            {isLoading ? (\n                <Loading />\n            ) : (\n                <div>\n                    <div>\n                        <label for=\"img-input\" className=\"img-input-label\">\n                            Choose a photo.\n                        </label>\n                        <input\n                            style={{ display: \"none\" }}\n                            type=\"file\"\n                            id=\"img-input\"\n                            accept=\"image/*\"\n                            multiple={false}\n                            onClick={() => {\n                                setImage(null);\n                                setDetectedFaces([]);\n                            }}\n                            onChange={(event) => {\n                                setImage(\n                                    URL.createObjectURL(event.target.files[0])\n                                );\n                            }}\n                        />\n                    </div>\n                    <img\n                        id=\"input-img\"\n                        src={image ? image : \"#\"}\n                        alt={image ? \"face\" : \"\"}\n                        className=\"input-image\"\n                    ></img>\n                    {image ? (\n                        <div className=\"output-image\">\n                            {detectedFaces.map((detectedFace) => {\n                                let width = detectedFace.detection._box.width;\n                                let height = detectedFace.detection._box.height;\n                                let x = detectedFace.detection._box.x;\n                                let y = detectedFace.detection._box.y;\n\n                                return (\n                                    <ProcessImage\n                                        image={image}\n                                        crop={{ width, height, x, y }}\n                                    />\n                                );\n                            })}\n                        </div>\n                    ) : null}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\n\nexport const Layout = (props) => <Container>{props.children}</Container>;\n","import React from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Styles = styled.div`\n    .navbar {\n        background-color: grey;\n        margin-bottom: 20px;\n    }\n\n    a,\n    .navbar-nav {\n        color: black;\n        padding: 5px;\n        &:hover {\n            color: white;\n        }\n    }\n`;\n\nexport const NavBar = () => {\n    return (\n        <Styles>\n            <Navbar expand=\"lg\">\n                <Navbar.Brand href=\"/\">Face Fit</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse>\n                    <Nav className=\"ml-auto\">\n                        <Nav.Item>\n                            <Link to=\"/\">Home</Link>\n                        </Nav.Item>\n\n                        <Nav.Item>\n                            <Link to=\"/about\">About</Link>\n                        </Nav.Item>\n\n                        <Nav.Item>\n                            <Link to=\"/contact\">Contact</Link>\n                        </Nav.Item>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </Styles>\n    );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport App from \"./Components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { About } from \"./Components/About\";\nimport { Contact } from \"./Components/Contact\";\nimport { Page404 } from \"./Components/Page404\";\nimport { Layout } from \"./Components/Layout\";\nimport { NavBar } from \"./Components/NavBar\";\n\nReactDOM.render(\n    <React.Fragment>\n        <Router>\n            <NavBar />\n            <Layout>\n                <Switch>\n                    <Route exact path=\"/\" component={App} />\n                    <Route path=\"/about\" component={About} />\n                    <Route path=\"/contact\" component={Contact} />\n                    <Route component={Page404} />\n                </Switch>\n            </Layout>\n        </Router>\n    </React.Fragment>,\n    document.getElementById(\"root\")\n);\n","import React from \"react\";\n\nexport const About = () => {\n    return (\n        <div>\n            <h1>About</h1>\n        </div>\n    );\n};\n","import React from \"react\";\n\nexport const Contact = () => {\n    return (\n        <div>\n            <h1>Contact</h1>\n        </div>\n    );\n};","import React from \"react\";\n\nexport const Page404 = () => {\n    return (\n        <div>\n            <h1>Page404</h1>\n        </div>\n    );\n};\n"],"sourceRoot":""}